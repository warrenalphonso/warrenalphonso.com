@import "tailwindcss/base";
@import "tailwindcss/components";
@import "tailwindcss/utilities";

/* I like cycling through colors! */
:root {
  --one: #cfefaf;
  --two: #b5dce8;
  --three: #ffc8b2;
  --four: #ffe766;
  --five: #e16f7c;
  --six: #a2a4e2;
  --link: #ff9800;
}

body {
  padding: 10px;
  flex: 1;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background-color: #fff8f7; /* Just barelyyy not white */
}

body > * {
  width: 100%;
}

img {
  width: 90%;
}

/* Fun squiggly line hyperlink hover effect from:
 * https://css-tricks.com/having-fun-with-link-hover-effects/ 
 * 
 * I'm using `main a` to match any `a` that's nested in `main`: don't want to 
 * style navbar links. 
 */
main a {
  background: linear-gradient(to bottom, var(--link) 0%, var(--link) 100%);
  background-position: 0 100%;
  background-repeat: repeat-x;
  background-size: 4px 4px;
  color: #000;
  text-decoration: none;
  transition: background-size 0.2s;
}

main a:hover {
  background-size: 4px 50px;
}

* {
  box-sizing: border-box;
}

@screen lg {
  body {
    padding: 0 15%;
  }
  img {
    width: 60%;
  }
}

@screen xl {
  body {
    padding: 0 25%;
  }
}

/* NAVBAR */

.navbar {
  padding-right: 0;
  @apply flex items-center justify-end flex-wrap pt-4;
}

@screen md {
  .navbar {
    /* padding-right: 30%; */
  }
}

.navlinks {
  @apply text-red-700 pr-6 no-underline;
}

.navlinks:hover {
  @apply text-pink-400 line-through;
}

/* PERMA */

.permalink {
  @apply pb-4;
}

.permalink-title {
  @apply text-4xl;
}

.permalink > a,
.permalink-title > a {
  @apply pr-8;
}

.permalink-author {
  @apply text-2xl;
}

/* READING */

li > p {
  margin-bottom: 0;
}

.notes > * {
  margin-top: 0;
  @apply mb-2;
}

/* CLUSTERS */
.cluster {
  padding: 14px;
  text-align: left;
  margin-top: 10px;
  margin-bottom: 10px;
}
.cluster:nth-of-type(6n + 1) {
  background-color: var(--one);
}
.cluster:nth-of-type(6n + 2) {
  background-color: var(--two);
}
.cluster:nth-of-type(6n + 3) {
  background-color: var(--three);
}
.cluster:nth-of-type(6n + 4) {
  background-color: var(--four);
}
.cluster:nth-of-type(6n + 5) {
  background-color: var(--five);
}
.cluster:nth-of-type(6n + 6) {
  background-color: var(--six);
}

blockquote:nth-of-type(6n + 1) {
  border-color: var(--one);
}
blockquote:nth-of-type(6n + 2) {
  border-color: var(--two);
}
blockquote:nth-of-type(6n + 3) {
  border-color: var(--three);
}
blockquote:nth-of-type(6n + 4) {
  border-color: var(--four);
}
blockquote:nth-of-type(6n + 5) {
  border-color: var(--five);
}
blockquote:nth-of-type(6n + 6) {
  border-color: var(--six);
}

.cluster-text {
  @apply text-lg;
  font-weight: 600;
  /* Must be one available on Google Fonts and specified in typography.ts */
  margin-bottom: 10px;
}

/* SYNTAX HIGHLIGHTING */
/* FROM: https://github.com/FormidableLabs/prism-react-renderer */
.code-pre {
  text-align: left;
  margin: 1em 0;
  padding: 0.5em;
  overflow: scroll;
}

.code-line {
  display: table-row;
}

.code-line-number {
  display: table-cell;
  text-align: right;
  padding-right: 1em;
  user-select: none;
  opacity: 0.5;
}

.code-line-content {
  display: table-cell;
}
